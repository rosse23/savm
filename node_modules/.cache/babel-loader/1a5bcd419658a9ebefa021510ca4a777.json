{"ast":null,"code":"var _jsxFileName = \"/run/media/rosse/Nuevo vol/Rosse/10mosem/savm/src/components/sidebar/SidebarMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { VscMenu } from \"react-icons/vsc\";\nimport SideBarItem from \"./SideBarItem\";\nimport { SideBarMenuCard } from \"./SideBarMenuCard\";\nimport classes from \"./SidebarMenu.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SidebarMenu = props => {\n  _s();\n\n  const {\n    handleClick,\n    isOpenHamburger\n  } = props;\n  const [isOpen, SetIsOpen] = useState(false);\n  const [isClicked, setIsClicked] = useState(false);\n  /*/*const [isOpenHamburger, SetIsOpenHamburger] = useState(false); */\n\n  /* function handleClick() {\n    SetIsOpen(!isOpen);\n  }*/\n\n  function handleClickHam() {\n    handleClick();\n    setIsClicked(prev => !prev);\n  }\n  /*\n  useEffect(() => {\n    if (!isOpenHamburger) {\n      SetIsOpen(false);\n    }\n  }, [isOpenHamburger]);*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.SideBarMenu} ${isOpen || isOpenHamburger ? classes.expanded : classes.collapsed} ${isClicked ? classes[\"expanded-clicked\"] : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.menuButton,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.hamburgerButton,\n        onClick: handleClickHam,\n        children: /*#__PURE__*/_jsxDEV(VscMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"main-container\"],\n      onMouseEnter: () => {\n        SetIsOpen(true);\n      },\n      onMouseLeave: () => {\n        SetIsOpen(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(SideBarMenuCard, {\n        isOpen: isOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SideBarItem, {\n        isOpen: isOpen,\n        isOpenHamburger: isOpenHamburger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SidebarMenu, \"n2skdmq64YQeSQAVM8q+0vRWDwo=\");\n\n_c = SidebarMenu;\nexport default SidebarMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarMenu\");","map":{"version":3,"sources":["/run/media/rosse/Nuevo vol/Rosse/10mosem/savm/src/components/sidebar/SidebarMenu.js"],"names":["React","useState","useEffect","VscMenu","SideBarItem","SideBarMenuCard","classes","SidebarMenu","props","handleClick","isOpenHamburger","isOpen","SetIsOpen","isClicked","setIsClicked","handleClickHam","prev","SideBarMenu","expanded","collapsed","menuButton","hamburgerButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAmCF,KAAzC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA;;AACA;AACF;AACA;;AACE,WAASc,cAAT,GAA0B;AACxBN,IAAAA,WAAW;AACXK,IAAAA,YAAY,CAAEE,IAAD,IAAU,CAACA,IAAZ,CAAZ;AACD;AACD;AACF;AACA;AACA;AACA;AACA;;;AAEE,sBACE;AACE,IAAA,SAAS,EAAG,GAAEV,OAAO,CAACW,WAAY,IAChCN,MAAM,IAAID,eAAV,GAA4BJ,OAAO,CAACY,QAApC,GAA+CZ,OAAO,CAACa,SACxD,IAAGN,SAAS,GAAGP,OAAO,CAAC,kBAAD,CAAV,GAAiC,EAAG,EAHnD;AAAA,4BAKE;AAAK,MAAA,SAAS,EAAEA,OAAO,CAACc,UAAxB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAEd,OAAO,CAACe,eAA3B;AAA4C,QAAA,OAAO,EAAEN,cAArD;AAAA,+BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAUE;AACE,MAAA,SAAS,EAAET,OAAO,CAAC,gBAAD,CADpB;AAEE,MAAA,YAAY,EAAE,MAAM;AAClBM,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OAJH;AAKE,MAAA,YAAY,EAAE,MAAM;AAClBA,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAPH;AAAA,8BASE,QAAC,eAAD;AAAiB,QAAA,MAAM,EAAED;AAAzB;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,WAAD;AACE,QAAA,MAAM,EAAEA,MADV;AAEE,QAAA,eAAe,EAAED;AAFnB;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA/CD;;GAAMH,W;;KAAAA,W;AAiDN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { VscMenu } from \"react-icons/vsc\";\nimport SideBarItem from \"./SideBarItem\";\nimport { SideBarMenuCard } from \"./SideBarMenuCard\";\nimport classes from \"./SidebarMenu.module.css\";\nconst SidebarMenu = (props) => {\n  const { handleClick, isOpenHamburger } = props;\n  const [isOpen, SetIsOpen] = useState(false);\n  const [isClicked, setIsClicked] = useState(false);\n  /*/*const [isOpenHamburger, SetIsOpenHamburger] = useState(false); */\n  /* function handleClick() {\n    SetIsOpen(!isOpen);\n  }*/\n  function handleClickHam() {\n    handleClick();\n    setIsClicked((prev) => !prev);\n  }\n  /*\n  useEffect(() => {\n    if (!isOpenHamburger) {\n      SetIsOpen(false);\n    }\n  }, [isOpenHamburger]);*/\n\n  return (\n    <div\n      className={`${classes.SideBarMenu} ${\n        isOpen || isOpenHamburger ? classes.expanded : classes.collapsed\n      } ${isClicked ? classes[\"expanded-clicked\"] : \"\"}`}\n    >\n      <div className={classes.menuButton}>\n        <button className={classes.hamburgerButton} onClick={handleClickHam}>\n          <VscMenu />\n        </button>\n      </div>\n      <div\n        className={classes[\"main-container\"]}\n        onMouseEnter={() => {\n          SetIsOpen(true);\n        }}\n        onMouseLeave={() => {\n          SetIsOpen(false);\n        }}\n      >\n        <SideBarMenuCard isOpen={isOpen} />\n        <SideBarItem\n          isOpen={isOpen}\n          isOpenHamburger={isOpenHamburger}\n        ></SideBarItem>\n      </div>\n    </div>\n  );\n};\n\nexport default SidebarMenu;\n"]},"metadata":{},"sourceType":"module"}